{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinim\\\\hospital-frontend\\\\src\\\\components\\\\CreateMedicalRecord.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { MedicalRecordService } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMedicalRecord = () => {\n  _s();\n  const {\n    patientId\n  } = useParams();\n  const [record, setRecord] = useState({\n    diagnosis: \"\",\n    treatment: \"\",\n    date: \"\",\n    notes: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRecord({\n      ...record,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await MedicalRecordService.create(patientId, record);\n      alert(\"Medical record created successfully!\");\n    } catch (error) {\n      console.error(\"Error creating medical record:\", error);\n      alert(\"Failed to create medical record.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Medical Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"diagnosis\",\n        placeholder: \"Diagnosis\",\n        value: record.diagnosis,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"treatment\",\n        placeholder: \"Treatment\",\n        value: record.treatment,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: record.date,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"notes\",\n        placeholder: \"Additional Notes\",\n        value: record.notes,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateMedicalRecord, \"jIcOOsdfeFUccSZwr0aBeOE15Yc=\", false, function () {\n  return [useParams];\n});\n_c = CreateMedicalRecord;\nexport default CreateMedicalRecord;\nvar _c;\n$RefreshReg$(_c, \"CreateMedicalRecord\");","map":{"version":3,"names":["React","useState","useParams","MedicalRecordService","jsxDEV","_jsxDEV","CreateMedicalRecord","_s","patientId","record","setRecord","diagnosis","treatment","date","notes","handleChange","e","name","value","target","handleSubmit","preventDefault","create","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/sinim/hospital-frontend/src/components/CreateMedicalRecord.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { MedicalRecordService } from \"../services/api\";\r\n\r\nconst CreateMedicalRecord = () => {\r\n    const { patientId } = useParams();\r\n    const [record, setRecord] = useState({\r\n        diagnosis: \"\",\r\n        treatment: \"\",\r\n        date: \"\",\r\n        notes: \"\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setRecord({ ...record, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await MedicalRecordService.create(patientId, record);\r\n            alert(\"Medical record created successfully!\");\r\n        } catch (error) {\r\n            console.error(\"Error creating medical record:\", error);\r\n            alert(\"Failed to create medical record.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Create Medical Record</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"diagnosis\" placeholder=\"Diagnosis\" value={record.diagnosis} onChange={handleChange} required />\r\n                <textarea name=\"treatment\" placeholder=\"Treatment\" value={record.treatment} onChange={handleChange} required />\r\n                <input type=\"date\" name=\"date\" value={record.date} onChange={handleChange} required />\r\n                <textarea name=\"notes\" placeholder=\"Additional Notes\" value={record.notes} onChange={handleChange} />\r\n                <button type=\"submit\">Create Record</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateMedicalRecord;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}