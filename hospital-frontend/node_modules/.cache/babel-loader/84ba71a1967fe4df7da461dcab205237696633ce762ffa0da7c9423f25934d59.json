{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinim\\\\hospital-frontend\\\\src\\\\components\\\\BillingList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './BillingList.css';\n\n// ✅ Helper function to format MySQL DATETIME properly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  if (!dateString) return 'N/A';\n  const date = new Date(dateString);\n\n  // Check if the date is valid\n  if (isNaN(date.getTime())) {\n    const [datePart, timePart] = dateString.split(' ');\n    if (datePart && timePart) {\n      return `${datePart} ${timePart}`;\n    }\n    return 'Invalid Date';\n  }\n  return date.toLocaleString();\n};\nconst BillingList = () => {\n  _s();\n  const [billingList, setBillingList] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/billing').then(response => setBillingList(response.data)).catch(error => console.error('Error fetching billing:', error));\n  }, []);\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/api/billing/${id}`);\n      setBillingList(billingList.filter(b => b.id !== id));\n    } catch (error) {\n      console.error('Error deleting invoice:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"billing-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Invoices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/add\",\n      className: \"btn\",\n      children: \"Create Invoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Patient Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Billing Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Payment Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: billingList.map(billing => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: billing.patient_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(billing.billing_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: billing.total_amount !== undefined && billing.total_amount !== null ? `$${billing.total_amount.toFixed(2)}` : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: billing.payment_status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/edit/${billing.id}`,\n              className: \"btn\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(billing.id),\n              className: \"btn-delete\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, billing.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(BillingList, \"ig05Jo9c3uL+s81WX8mXtdgP1qk=\");\n_c = BillingList;\nexport default BillingList;\nvar _c;\n$RefreshReg$(_c, \"BillingList\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","jsxDEV","_jsxDEV","formatDate","dateString","date","Date","isNaN","getTime","datePart","timePart","split","toLocaleString","BillingList","_s","billingList","setBillingList","get","then","response","data","catch","error","console","handleDelete","id","delete","filter","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","map","billing","patient_name","billing_date","total_amount","undefined","toFixed","payment_status","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sinim/hospital-frontend/src/components/BillingList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './BillingList.css';\r\n\r\n// ✅ Helper function to format MySQL DATETIME properly\r\nconst formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n\r\n    const date = new Date(dateString);\r\n\r\n    // Check if the date is valid\r\n    if (isNaN(date.getTime())) {\r\n        const [datePart, timePart] = dateString.split(' ');\r\n        if (datePart && timePart) {\r\n            return `${datePart} ${timePart}`;\r\n        }\r\n        return 'Invalid Date';\r\n    }\r\n\r\n    return date.toLocaleString();\r\n};\r\n\r\nconst BillingList = () => {\r\n    const [billingList, setBillingList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8080/api/billing')\r\n            .then(response => setBillingList(response.data))\r\n            .catch(error => console.error('Error fetching billing:', error));\r\n    }, []);\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:8080/api/billing/${id}`);\r\n            setBillingList(billingList.filter(b => b.id !== id));\r\n        } catch (error) {\r\n            console.error('Error deleting invoice:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"billing-list-container\">\r\n            <h2>Invoices</h2>\r\n            <Link to=\"/add\" className=\"btn\">Create Invoice</Link>\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Patient Name</th>\r\n                        <th>Billing Date</th>\r\n                        <th>Total Amount</th>\r\n                        <th>Payment Status</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {billingList.map(billing => (\r\n                        <tr key={billing.id}>\r\n                            <td>{billing.patient_name}</td>\r\n                            \r\n                            {/* ✅ Use formatDate function to avoid \"Invalid Date\" */}\r\n                            <td>{formatDate(billing.billing_date)}</td>\r\n\r\n                            {/* ✅ Ensure total_amount is valid before applying .toFixed() */}\r\n                            <td>\r\n                                {billing.total_amount !== undefined && billing.total_amount !== null\r\n                                    ? `$${billing.total_amount.toFixed(2)}`\r\n                                    : 'N/A'}\r\n                            </td>\r\n\r\n                            <td>{billing.payment_status}</td>\r\n                            <td>\r\n                                <Link to={`/edit/${billing.id}`} className=\"btn\">Edit</Link>\r\n                                <button onClick={() => handleDelete(billing.id)} className=\"btn-delete\">Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BillingList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}