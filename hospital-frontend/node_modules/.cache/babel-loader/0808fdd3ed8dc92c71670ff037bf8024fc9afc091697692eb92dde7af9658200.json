{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinim\\\\hospital-frontend\\\\src\\\\components\\\\MedicalRecordList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MedicalRecordService } from '../services/api';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedicalRecordList = () => {\n  _s();\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadRecords = async () => {\n      try {\n        const response = await MedicalRecordService.getAll();\n        setRecords(response.data);\n      } catch (error) {\n        console.error('Error loading records:', error);\n        alert('Failed to load medical records');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadRecords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6 text-blue-600\",\n      children: \"Medical Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading records...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : records.map(record => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/records/${record.id}`,\n      className: \"block bg-white rounded-lg shadow-md p-4 mb-4 hover:shadow-lg transition-shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold\",\n        children: record.diagnosis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, record.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicalRecordList, \"liZ6qUnz5IIMkNyJ8/NqI11oW9Q=\");\n_c = MedicalRecordList;\nexport default MedicalRecordList;\nvar _c;\n$RefreshReg$(_c, \"MedicalRecordList\");","map":{"version":3,"names":["React","useEffect","useState","MedicalRecordService","Link","jsxDEV","_jsxDEV","MedicalRecordList","_s","records","setRecords","loading","setLoading","loadRecords","response","getAll","data","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","record","to","id","diagnosis","_c","$RefreshReg$"],"sources":["C:/Users/sinim/hospital-frontend/src/components/MedicalRecordList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MedicalRecordService } from '../services/api';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MedicalRecordList = () => {\r\n  const [records, setRecords] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadRecords = async () => {\r\n      try {\r\n        const response = await MedicalRecordService.getAll();\r\n        setRecords(response.data);\r\n      } catch (error) {\r\n        console.error('Error loading records:', error);\r\n        alert('Failed to load medical records');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadRecords();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6 text-blue-600\">Medical Records</h1>\r\n\r\n      {loading ? (\r\n        <div>Loading records...</div>\r\n      ) : (\r\n        records.map(record => (\r\n          <Link key={record.id} to={`/records/${record.id}`} \r\n                className=\"block bg-white rounded-lg shadow-md p-4 mb-4 hover:shadow-lg transition-shadow\">\r\n            <h3 className=\"text-xl font-semibold\">{record.diagnosis}</h3>\r\n            {/* Display other relevant details */}\r\n            {/* Example: */}\r\n            {/*<p>Treatment: {record.treatment}</p>*/}\r\n          </Link>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicalRecordList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,oBAAoB,QAAQ,iBAAiB;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,oBAAoB,CAACY,MAAM,CAAC,CAAC;QACpDL,UAAU,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CE,KAAK,CAAC,gCAAgC,CAAC;MACzC,CAAC,SAAS;QACRP,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKc,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCf,OAAA;MAAIc,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEzEd,OAAO,gBACNL,OAAA;MAAAe,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAE7BhB,OAAO,CAACiB,GAAG,CAACC,MAAM,iBAChBrB,OAAA,CAACF,IAAI;MAAiBwB,EAAE,EAAE,YAAYD,MAAM,CAACE,EAAE,EAAG;MAC5CT,SAAS,EAAC,gFAAgF;MAAAC,QAAA,eAC9Ff,OAAA;QAAIc,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAEM,MAAM,CAACG;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC,GAFpDE,MAAM,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMd,CACP,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtCID,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AAwCvB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}